TO DO:
------

PHASE 1

1) DONE Create Git repository
2) DONE Create barebones Ruby files
3) DONE Create specs for example cases in brief
4) Break down requirements into tasks:
    * DONE Rule for BOGO offer on Fruit Tea
    * DONE Reduced price from $5.00 to $4.50 for 3 or more Apples
    * DONE System for setting up pricing rules rather than special cases
      embedded in code.
    * DONE Initialize method should take pricing_rules parameter
      * DONE Think about how this parameter is formatted
    * Re-factor once the above is implemented
      * Single-responsibility
      * DONE Go through item list only ONCE and apply offers when necessary
        rather than doing it twice (subtracting offers 2nd time)
      * DONE Pass prices as parameter rather than hard-code them
      * DONE Possibly combine PricingRules and Products classes?
5) DONE Re-factor for SR.



PHASE 2

Re-factor with SINGLE RESPONSIBILITY in mind:
  * Any method that is doing more than one thing should be split up into
    separate classes (each with a method for doing that one thing).
  * Raise errors rather than return errors as strings.

REMEMBER:

  * Single responsibility
  * Each spec should only test ONE THING
  * For IRB testing: irb -r ./lib/checkout.rb
